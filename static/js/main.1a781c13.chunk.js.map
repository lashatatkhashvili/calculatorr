{"version":3,"sources":["logo.svg","serviceWorker.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Counter","props","state","count","this","setState","length","pas","result","split","mze","i","parseFloat","splice","toFixed","id","className","onClick","clearr","bind","dividee","multiplyy","seven7","eight8","nine9","subtractt","four4","five5","six6","addd","one1","two2","three3","equall","zero0","React","Component","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1a781c13.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: \"0\"\n    };\n  \n }\n  clearr() {\n    this.setState({\n      count: \"0\"\n    });\n  }\n  \n  one1() {\n    if(this.state.count == 0){this.state.count = \"\";}\n    this.setState(state => ({\n      count: state.count + \"1\"\n    }));\n  }\n  two2() {\n    if(this.state.count == 0){this.state.count = \"\";}\n    this.setState(state => ({\n      count: state.count + \"2\"\n    }));\n  }\n   three3() {\n    if(this.state.count == 0){this.state.count = \"\";}\n    this.setState(state => ({\n      count: state.count + \"3\"\n    }));\n  }\n   four4() {\n    if(this.state.count == 0){this.state.count = \"\";}\n    this.setState(state => ({\n      count: state.count + \"4\"\n    }));\n  }\n   five5() {\n    if(this.state.count == 0){this.state.count = \"\";}\n    this.setState(state => ({\n      count: state.count + \"5\"\n    }));\n  }\n   six6() {\n    if(this.state.count == 0){this.state.count = \"\";}\n    this.setState(state => ({\n      count: state.count + \"6\"\n    }));\n  }\n   seven7() {\n    if(this.state.count == 0){this.state.count = \"\";}\n    this.setState(state => ({\n      count: state.count + \"7\"\n    }));\n  }\n   eight8() {\n    if(this.state.count == 0){this.state.count = \"\";}\n    this.setState(state => ({\n      count: state.count + \"8\"\n    }));\n  }\n   nine9() {\n    if(this.state.count == 0){this.state.count = \"\";}\n    this.setState(state => ({\n      count: state.count + \"9\"\n    }));\n  }\n   zero0() {\n     if(this.state.count != 0){\n    this.setState(state => ({\n      count: state.count + \"0\"\n    }));\n   }\n  }\n  \n   addd() {\n     if(this.state.count[this.state.count.length - 1] != \" \"){\n    this.setState(state => ({  \n      count: state.count + \" \" + \"+\" + \" \"\n        \n    }));\n   }\n  }\n  \n  dividee() {\n    if(this.state.count[this.state.count.length - 1] != \" \"){\n    this.setState(state => ({  \n      count: state.count + \" \" + \"/\" + \" \"\n        \n    }));\n   }\n  }\n  \n  multiplyy() {\n    if(this.state.count[this.state.count.length - 1] != \" \"){\n    this.setState(state => ({  \n      count: state.count + \" \" + \"*\" + \" \"\n        \n    }));\n    }\n  }\n  \n  subtractt() {\n    if(this.state.count[this.state.count.length - 1] != \" \"){\n    this.setState(state => ({  \n      count: state.count + \" \" + \"-\" + \" \"\n        \n    }));\n   }\n  }\n  \n  equall() {\nlet result = this.state.count.split(\" \")\n\nlet mze = 0;\nlet pas = 0;\n\n\nfor(let i = 0; i < result.length; i++){\n  if(result[i] === \"*\" || result[i] === \"/\"){\n    if(result[i] === \"*\"){\n      mze = parseFloat(result[i-1]) * parseFloat(result[i+1])\n    }\n     else {\n      mze = parseFloat(result[i-1]) / parseFloat(result[i+1])\n     }\n    result.splice(i-1,2)\n    result[i-1] = mze;\n    i=0;\n    \n      \n  }\n}\n\nfor(let i = 0; i < result.length; i++){\n  if(result[i] === \"+\" || result[i] === \"-\"){\n    if(result[i] === \"+\"){\n      mze = parseFloat(result[i-1]) + parseFloat(result[i+1])\n    }\n     else {\n      mze = parseFloat(result[i-1]) - parseFloat(result[i+1])\n     }\n    result.splice(i-1,2)\n    result[i-1] = mze;\n    i=0;\n   \n      \n  }\n}\n\npas = result[0].toFixed(1);\nthis.state.count = pas;\n    this.setState(state => ({  \n      count: state.count\n        \n    }));\n  }\n  \n  render() {\n    return (\n      <div id=\"calculator\">\n  <div id=\"buttons\">\n    <h1 className=\"vision\">{this.state.count}</h1>\n    <button className=\"clear\" onClick={this.clearr.bind(this)}>AC</button>\n    <button className=\"divide\" onClick={this.dividee.bind(this)}>/</button>\n    <button className=\"multiply\" onClick={this.multiplyy.bind(this)}>*</button>\n    <button className=\"seven\" onClick={this.seven7.bind(this)}>7</button>\n    <button className=\"eight\" onClick={this.eight8.bind(this)}>8</button>\n    <button className=\"nine\" onClick={this.nine9.bind(this)}>9</button>\n    <button className=\"subtract\" onClick={this.subtractt.bind(this)}>-</button>\n    <button className=\"four\" onClick={this.four4.bind(this)}>4</button>\n    <button className=\"five\" onClick={this.five5.bind(this)}>5</button>\n    <button className=\"six\" onClick={this.six6.bind(this)}>6</button>\n    <button className=\"add\" onClick={this.addd.bind(this)}>+</button>\n    <button className=\"once\" onClick={this.one1.bind(this)}>1</button>\n    <button className=\"two\" onClick={this.two2.bind(this)}>2</button>\n    <button className=\"three\" onClick={this.three3.bind(this)}>3</button>\n    <button className=\"equal\" onClick={this.equall.bind(this)}>=</button>\n    <button className=\"zero\" onClick={this.zero0.bind(this)}>0</button>\n    <button className=\"decimal\">.</button>\n    \n  </div>\n</div>\n    );\n  }\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Counter />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}